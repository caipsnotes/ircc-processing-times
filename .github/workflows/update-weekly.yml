name: Weekly IRCC Snapshot
on:
  schedule:
    - cron: '0 0 * * 1'  # Every Monday UTC (also fixed the cron)
  workflow_dispatch: {}   # Allow manual run
jobs:
  weekly_snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Create data directory
        run: mkdir -p data
      # Fetch the same IRCC JSON files you already use
      - name: Fetch country names
        uses: githubocto/flat@v3
        with:
          http_url: https://www.canada.ca/content/dam/ircc/documents/json/data-country-name-en.json
          downloaded_filename: data/data-country-name-en.json
      - name: Fetch processing times
        uses: githubocto/flat@v3
        with:
          http_url: https://www.canada.ca/content/dam/ircc/documents/json/data-ptime-en.json
          downloaded_filename: data/data-ptime-en.json
      - name: Fetch in-Canada services
        uses: githubocto/flat@v3
        with:
          http_url: https://www.canada.ca/content/dam/ircc/documents/json/data-ptime-non-country-en.json
          downloaded_filename: data/data-ptime-non-country-en.json
      # Save a weekly snapshot for rolling 52 weeks
      - name: Save weekly snapshot
        run: |
          YEAR=$(date +'%Y')
          WEEK=$(date +'%V')
          SNAPSHOT_DIR="weekly"
          mkdir -p $SNAPSHOT_DIR
          
          cp data/data-ptime-en.json "$SNAPSHOT_DIR/$YEAR-W$WEEK.json"
          # Keep only last 52 weeks
          ls -1 $SNAPSHOT_DIR/*.json | sort | head -n -52 | xargs -r rm -f
      - name: Create weekly index file
        run: |
          SNAPSHOT_DIR="weekly"
          if [ -d "$SNAPSHOT_DIR" ] && [ "$(ls -A $SNAPSHOT_DIR/*.json 2>/dev/null)" ]; then
            ls -1 $SNAPSHOT_DIR/*.json | sed 's|.*/||' | sort | jq -R -s -c 'split("\n")[:-1]' > $SNAPSHOT_DIR/index.json
            git add $SNAPSHOT_DIR/index.json
            echo "Created index with $(cat $SNAPSHOT_DIR/index.json | jq length) files"
          else
            echo "No weekly snapshots found, skipping index creation"
          fi
      # Commit and push
            - name: Commit and push
              run: |
                git config user.name "github-actions[bot]"
                git config user.email "github-actions[bot]@users.noreply.github.com"
                
                # Ensure we're on the right branch
                git checkout main || git checkout master
                
                # Pull latest changes to avoid conflicts
                git pull origin $(git branch --show-current) || echo "Pull failed, continuing..."
                
                # Add all weekly files
                git add weekly/ || echo "Nothing new to add"
                
                # Check if there are changes and commit
                if git diff --staged --quiet; then
                  echo "No changes to commit"
                else
                  git commit -m "Weekly snapshot for $(date +'%Y-%m-%d')"
                  git push origin $(git branch --show-current)
                  echo "Changes committed and pushed successfully"
                fi
